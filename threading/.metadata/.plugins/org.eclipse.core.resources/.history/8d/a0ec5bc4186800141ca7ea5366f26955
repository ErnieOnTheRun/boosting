/*
 * ThreadCommunication.cpp
 *
 *  Created on: Nov 9, 2014
 *      Author: ErnieOnTheRun
 */

#include <iostream>
#include <string>
#include <list>

#include <boost/thread/thread.hpp>
#include <boost/thread/condition.hpp>
#include <boost/thread/mutex.hpp>

class Request { };

template<typename T>
	class JobQueue {
	public:
		JobQueue () {};
		~JobQueue () {};

		void submitJob (const &T x){



		}



	private:
		std::list<T> list_;
		boost::mutex mutex_;
		boost::condition workToBeDone_;

	};

JobQueue<Request> myJobQueue;

void boss() {


}


int main(){

	boost::thread thr1(boss);
	boost::thread thr2(worker);
	boost::thread thr3(worker);

	thr1.join();
	thr2.join();
	thr3.join();

}
